#!/usr/bin/env bash

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

set -e  # Exit immediately if a command exits with a non-zero status.

puts-step() {
  echo "-----> $*"
}

error() {
  echo " !     ERROR: $*" >&2
  exit 1
}

# Install TA-Lib C library
puts-step "Installing TA-Lib C library"
TALIB_SRC_URL="https://github.com/TA-Lib/ta-lib/releases/download/v0.4.0/ta-lib-0.4.0-src.tar.gz"
TALIB_BUILD_DIR="$BUILD_DIR/ta-lib"
TALIB_INSTALL_DIR="/app/.heroku/vendor/ta-lib"

mkdir -p $TALIB_BUILD_DIR
puts-step "Downloading TA-Lib source code"
curl -fsSL $TALIB_SRC_URL | tar -xz -C $TALIB_BUILD_DIR --strip-components=1 || error "Failed to download and extract TA-Lib source."

cd $TALIB_BUILD_DIR
puts-step "Configuring TA-Lib"
./configure --prefix=$TALIB_INSTALL_DIR --disable-static || error "Failed to configure TA-Lib."

puts-step "Compiling TA-Lib"
make || error "Failed to compile TA-Lib."

puts-step "Installing TA-Lib"
make install || error "Failed to install TA-Lib."

# Verify library installation
puts-step "Verifying TA-Lib installation"
ls -l $TALIB_INSTALL_DIR/lib || error "Failed to list contents of TA-Lib library directory."

# Handle library name discrepancies
if [ -f $TALIB_INSTALL_DIR/lib/libta_lib.so.0.0.0 ]; then
  echo "Found libta_lib.so.0.0.0"
  
  # Ensure symlink creation
  if [ ! -f $TALIB_INSTALL_DIR/lib/libta_lib.so ]; then
    echo "Creating symlink: libta_lib.so.0.0.0 -> libta_lib.so"
    ln -s $TALIB_INSTALL_DIR/lib/libta_lib.so.0.0.0 $TALIB_INSTALL_DIR/lib/libta_lib.so
  fi
  if [ ! -f $TALIB_INSTALL_DIR/lib/libta-lib.so ]; then
    echo "Creating symlink: libta_lib.so.0.0.0 -> libta-lib.so"
    ln -s $TALIB_INSTALL_DIR/lib/libta_lib.so.0.0.0 $TALIB_INSTALL_DIR/lib/libta-lib.so
  fi
else
  error "TA-Lib C library was not installed correctly. Missing libta_lib.so.0.0.0."
fi

# Update linker cache
puts-step "Running ldconfig to update linker cache"
ldconfig -n $TALIB_INSTALL_DIR/lib || error "Failed to update linker cache for TA-Lib."

# Check shared library visibility
puts-step "Checking shared library visibility for linker"
ldconfig -p | grep libta-lib || error "Shared library libta-lib.so not found in linker paths."

# Set environment variables for linker
export LD_LIBRARY_PATH="$TALIB_INSTALL_DIR/lib:$LD_LIBRARY_PATH"
export CFLAGS="-I$TALIB_INSTALL_DIR/include"

# Install Python dependencies
puts-step "Installing Python dependencies"
pip install -r $BUILD_DIR/requirements.txt || error "Failed to install Python dependencies."

# Install TA-Lib Python wrapper
puts-step "Re-exporting LD_LIBRARY_PATH before installing TA-Lib Python wrapper"
export LD_LIBRARY_PATH="$TALIB_INSTALL_DIR/lib:$LD_LIBRARY_PATH"

puts-step "Installing TA-Lib Python wrapper"
pip install TA-Lib==0.5.1 || error "Failed to install TA-Lib Python wrapper."

# Verify the TA-Lib Python wrapper installation
puts-step "Verifying TA-Lib Python wrapper installation"
python -c "import talib; print(talib.get_functions())" || error "Failed to load TA-Lib Python wrapper."

puts-step "Buildpack installation complete"
